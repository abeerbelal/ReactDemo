{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfalak\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const emailInputRef = useRef(); //using ref insted of check every keypress\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    //optional:add validation \n\n    //check if we in login mood \n    if (isLogin) {} else {\n      //this will send such a sin up request\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD5e8Oj-nYZyWwmq9SnK929moBazE0d804', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n          //we send it and alawys should br true \"firebase doc\"\n        }),\n\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        //to handle the response because fetch return promisse\n        if (res.ok) {} else {\n          //if it fails ,it turns out that this response data, which \n          //we get back will hold some extra info so looking to response datat by looking to ...\n          return res.json().then(data => {\n            //show an error modal \n            // console.log(data);\n            let erroeMessage = 'Authountication Faild ';\n            if (data && data.error && data.error.message) {\n              erroeMessage = data.error.message;\n            }\n            alert(erroeMessage);\n          });\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"d5MFzbQ69dYgb5LfYbTwTxIKLCk=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","classes","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","erroeMessage","error","message","alert","auth","control","actions","toggle"],"sources":["C:/Users/alfalak/Desktop/01-starting-project/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState,useRef } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();//using ref insted of check every keypress\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event)=>{\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    //optional:add validation \n\n    //check if we in login mood \n    if (isLogin) {\n\n    } else{\n      //this will send such a sin up request\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD5e8Oj-nYZyWwmq9SnK929moBazE0d804',\n     {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n        //we send it and alawys should br true \"firebase doc\"\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n     }\n     ).then(res =>{//to handle the response because fetch return promisse\n        if(res.ok) {\n\n        }else {\n          //if it fails ,it turns out that this response data, which \n          //we get back will hold some extra info so looking to response datat by looking to ...\n        return  res.json().then(data =>{\n            //show an error modal \n           // console.log(data);\n           let erroeMessage = 'Authountication Faild ';\n           if (data && data.error && data.error.message) {\n            erroeMessage = data.error.message;\n           }\n           alert(erroeMessage);\n           \n          }\n\n          );\n        }\n     });\n    }\n  };\n\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required  ref={emailInputRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required  ref={passwordInputRef}/>\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,MAAM,QAAQ,OAAO;AAEvC,OAAOC,OAAO,MAAM,uBAAuB;AAAC;AAE5C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAMC,aAAa,GAAGH,MAAM,EAAE,CAAC;EAC/B,MAAMI,gBAAgB,GAAGJ,MAAM,EAAE;EACjC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMQ,qBAAqB,GAAG,MAAM;IAClCD,UAAU,CAAEE,SAAS,IAAK,CAACA,SAAS,CAAC;EACvC,CAAC;EAED,MAAMC,aAAa,GAAIC,KAAK,IAAG;IAC7BA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,YAAY,GAAGT,aAAa,CAACU,OAAO,CAACC,KAAK;IAChD,MAAMC,eAAe,GAAGX,gBAAgB,CAACS,OAAO,CAACC,KAAK;;IAEtD;;IAEA;IACA,IAAIT,OAAO,EAAE,CAEb,CAAC,MAAK;MACJ;MACAW,KAAK,CAAC,uGAAuG,EAC9G;QACCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAET,YAAY;UACnBU,QAAQ,EAAEP,eAAe;UACzBQ,iBAAiB,EAAE;UACnB;QACF,CAAC,CAAC;;QACFC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACD,CAAC,CACA,CAACC,IAAI,CAACC,GAAG,IAAG;QAAC;QACX,IAAGA,GAAG,CAACC,EAAE,EAAE,CAEX,CAAC,MAAK;UACJ;UACA;UACF,OAAQD,GAAG,CAACE,IAAI,EAAE,CAACH,IAAI,CAACI,IAAI,IAAG;YAC3B;YACD;YACA,IAAIC,YAAY,GAAG,wBAAwB;YAC3C,IAAID,IAAI,IAAIA,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACE,KAAK,CAACC,OAAO,EAAE;cAC7CF,YAAY,GAAGD,IAAI,CAACE,KAAK,CAACC,OAAO;YAClC;YACAC,KAAK,CAACH,YAAY,CAAC;UAEpB,CAAC,CAEA;QACH;MACH,CAAC,CAAC;IACH;EACF,CAAC;EAGD,oBACE;IAAS,SAAS,EAAE7B,OAAO,CAACiC,IAAK;IAAA,wBAC/B;MAAA,UAAK7B,OAAO,GAAG,OAAO,GAAG;IAAS;MAAA;MAAA;MAAA;IAAA,QAAM,eACxC;MAAM,QAAQ,EAAEI,aAAc;MAAA,wBAC5B;QAAK,SAAS,EAAER,OAAO,CAACkC,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,OAAO;UAAA,UAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAQ,eACzC;UAAO,IAAI,EAAC,OAAO;UAAC,EAAE,EAAC,OAAO;UAAC,QAAQ;UAAE,GAAG,EAAEhC;QAAc;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1D,eACN;QAAK,SAAS,EAAEF,OAAO,CAACkC,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,UAAU;UAAA,UAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC/C;UAAO,IAAI,EAAC,UAAU;UAAC,EAAE,EAAC,UAAU;UAAC,QAAQ;UAAE,GAAG,EAAE/B;QAAiB;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACnE,eACN;QAAK,SAAS,EAAEH,OAAO,CAACmC,OAAQ;QAAA,wBAC9B;UAAA,UAAS/B,OAAO,GAAG,OAAO,GAAG;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAU,eACvD;UACE,IAAI,EAAC,QAAQ;UACb,SAAS,EAAEJ,OAAO,CAACoC,MAAO;UAC1B,OAAO,EAAE9B,qBAAsB;UAAA,UAE9BF,OAAO,GAAG,oBAAoB,GAAG;QAA6B;UAAA;UAAA;UAAA;QAAA,QACxD;MAAA;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GAnFIH,QAAQ;AAAA,KAARA,QAAQ;AAqFd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}